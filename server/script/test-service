#!/usr/bin/env bash

# DESCRIPTION:
#   Execute ./service unit tests
# USAGE:
#   Test all services
#     ./script/test-service
#   Test specific service
#     ./script/test-service ./service/example/player

echo
echo "=> Test service"
echo

# Environment
if [ -z "$APP_SERVER_GO_VERSION" ]; then
    source "${BASH_SOURCE%/*}"/env || exit $?
fi

function test_service {

    if [ -f "go.mod" ]; then
        echo "=> Test service directory"
        APP_SERVER_HOME=$(pwd)
        export APP_SERVER_HOME

        if [ "$APP_SERVER_ENV" = "development" ]; then
            if [ -f ".env.development" ]; then
                echo "=> Test service - sourcing service .env.development"
                source .env.development
            fi
        fi

        if [ "$APP_SERVER_ENV" = "ci" ]; then
            if [ -f ".env.ci" ]; then
                echo "=> Test service - sourcing service .env.ci"
                source .env.ci
            fi
        fi

        echo "=> Test service - APP_SERVER_HOME - ${APP_SERVER_HOME}"
        go test -v -cover -count 1 ./... || exit $?
    fi
}

function test_services {

    CURRENT_DIRECTORY=$PWD
    cd "$BASE_DIRECTORY" || exit

    for SERVICE_NAME in *; do

        # Ingoring template
        if [ "$SERVICE_NAME" = "template" ] && [ "$APP_SERVER_ENABLE_TEMPLATE" != 1 ]; then
            echo "=> (start_services) - Skipping service $SERVICE_NAME"
            continue
        fi

        cd "$SERVICE_NAME" || exit
        test_service
        cd - || exit
    done

    cd "$CURRENT_DIRECTORY" || exit
}

# Specific service / All services
TEST_SERVICE_NAME=""
if [ -n "$1" ]; then
    TEST_SERVICE_NAME=$1
    shift

    cd "$TEST_SERVICE_NAME" || exit
    test_service;
    cd - || exit
else

    # Service directory list
    BASE_DIRECTORY="service"
    test_services;

    # Service example directory list
    if [[ "$APP_SERVER_ENABLE_EXAMPLES" == 1 ]]; then
        echo " => Starting example services"
        
        BASE_DIRECTORY="service/example"
        test_services;
    fi
fi

