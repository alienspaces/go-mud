#!/usr/bin/env bash

# DESCRIPTION:
#   Execute ./service unit tests
# USAGE:
#   Test all services
#     ./script/test-service
#   Test specific service
#     ./script/test-service ./service/example/player

echo
echo "=> (test-docker-run) Testing docker run CI"
echo
if [ -n "$1" ]; then
    TEST_SERVICE_NAME=$1
    shift
fi

# Environment
source "${BASH_SOURCE%/*}"/environment || exit $?

# Service directory list
SERVICE_BASE_PATH=./service
cd $SERVICE_BASE_PATH || exit
SERVICE_NAMES=(*)
cd - || exit

if [ -z "$CI_COMMIT_SHORT_SHA" ]; then
    CI_COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)
fi

for SERVICE_NAME in "${SERVICE_NAMES[@]}"; do

    # Ingoring template always
    if [ "$SERVICE_NAME" = "template" ]; then
        echo "=> (test-docker-run) - Skipping run service $SERVICE_NAME"
        continue
    fi

    if [ -n "$TEST_SERVICE_NAME" ] && [ "$SERVICE_NAME" !=  "$TEST_SERVICE_NAME" ]; then
        echo "=> (test-docker-run) - Skipping rub service $SERVICE_NAME"
        continue
    fi

    echo "=> (test-docker-run) - Running service $SERVICE_NAME"

    SERVICE_DIR="./service/$SERVICE_NAME"
    echo "Directory: $SERVICE_DIR";
    echo ""

    if [ -f "${SERVICE_DIR}/build/docker/Dockerfile" ]; then
        docker run \
            --interactive \
            --tty \
            --rm \
            --name "go-mud-${SERVICE_NAME}" \
            --env APP_SERVER_ENV=ci \
            --env APP_SERVER_LOG_LEVEL=info \
            --env APP_SERVER_SCHEMA_PATH="/schema/docs" \
            --env APP_SERVER_JWT_SIGNING_KEY="!notTherealSecretNoob!" \
            --env APP_SERVER_PORT=8084 \
            --env APP_SERVER_DB_HOST=localhost \
            --env APP_SERVER_DB_NAME="go-mud" \
            --env APP_SERVER_DB_PORT=5432 \
            --env APP_SERVER_DB_USER="go-mud-user" \
            --env APP_SERVER_DB_PASSWORD="go-mud-pass" \
            --publish 8084:8084 \
        "registry.gitlab.com/alienspaces/go-mud/${SERVICE_NAME}-server:${CI_COMMIT_SHORT_SHA}"
    fi

done
