#!/usr/bin/env bash

# Local development run script

# Environment
source ${BASH_SOURCE%/*}/environment || exit $?

# go version
if [ $(command -v gvm) ]; then
    source  ~/.gvm/scripts/gvm
    echo "=> Use ${APP_SERVER_GO_VERSION}"
    gvm use $APP_SERVER_GO_VERSION || exit $?
fi

# golang migrate
MIGRATE_PATH=$(which migrate)
if [[ "$MIGRATE_PATH" != *"$APP_SERVER_GO_VERSION"* ]]; then
    source ${BASH_SOURCE%/*}/db-migrate-install || exit $?
fi

function migrate_up {
    for SERVICE_NAME in "${SERVICE_NAMES[@]}"; do

        # run migrations
        if [ -d "$SERVICE_BASE_PATH/$SERVICE_NAME/migration" ]; then

            # load service specific environment
            source ${BASH_SOURCE%/*}/environment "$SERVICE_BASE_PATH/$SERVICE_NAME" || exit $?

            URL="postgres://$APP_SERVER_DB_USER:$APP_SERVER_DB_PASSWORD@$APP_SERVER_DB_HOST:$APP_SERVER_DB_PORT/$APP_SERVER_DB_NAME?sslmode=disable"

            echo "=> Migration path $SERVICE_BASE_PATH/$SERVICE_NAME/migration"

            migrate -verbose -path "$SERVICE_BASE_PATH/$SERVICE_NAME/migration" -database "$URL" -- up
        fi
    done
}

# service directory list
shopt -s dotglob
shopt -s nullglob

SERVICE_BASE_PATH=./service
cd $SERVICE_BASE_PATH
SERVICE_NAMES=(*)
cd -

migrate_up

# Service example directory list
if [[ "$APP_SERVER_ENABLE_EXAMPLES" == 1 ]]; then
    echo " => Migrating example services"

    SERVICE_BASE_PATH=./service/example
    cd $SERVICE_BASE_PATH
    SERVICE_NAMES=(*)
    cd -

    migrate_up
fi
