{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Person",
    "additionalProperties": false,
    "$def": {
        "req1": { "required": ["first_name","last_name","age"]},
        "req2": {
            "if": { "properties": { "age": { "type": "null" } } },
            "then": {},
            "else": {
                "if": { "properties": { "age": { "minimum": 18 } } },
                "then": { "required": ["proof_of_age"] },
                "else": { "required": ["parents"] }
            }
        },
        "people": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/$def/person"}
        },
        "person": {
            "allOf": [
                {"$ref": "#/$def/individual"},
                {"$ref": "#/$def/req1"},
                {"$ref": "#/$def/req2"}
            ]
        },
        "individual": {
            "type": "object",
            "properties": {
                "nullable_string_field": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "first_name": {
                    "type": "string",
                    "pattern": ".+",
                    "description": "The person's first name."
                },
                "last_name": {
                    "type": "string",
                    "pattern": ".+",
                    "description": "The person's last name."
                },
                "title": {
                    "type": "string",
                    "enum": ["Dr", "Prof", "Mr", "Mrs", "Ms"]
                },
                "dob": {
                    "type": "string",
                    "format": "date",
                    "example": "2000-01-01"
                },
                "age": {
                    "description": "Age in years which must be equal to or greater than zero.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 120
                },
                "proof_of_age": {
                    "description": "Identifier",
                    "type": "object",
                    "required": ["id_type","id_number"],
                    "properties": {
                        "id_type": {
                            "description": "identification type",
                            "enum": ["driving licence", "passport", "ssn"]
                        },
                        "id_number": {
                            "description": "identification number",
                            "type": "string",
                            "pattern": "^[A-Z]{1,3}[0-9]+$"
                        }
                    }
                },
                "parents": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 2,
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "contacts": { "$ref": "test.reference.schema.json#/$def/contact_types"},
                "primary_contact": {
                    "allOf": [
                        { "$ref": "test.reference.schema.json#/$def/contact_types"},
                        { "oneOf": [
                            { "required": ["phone"] },
                            { "required": ["email"] },
                            { "required": ["address"] }
                        ]}
                    ]
                },
                "all_contacts": {
                    "allOf": [
                        { "$ref": "test.reference.schema.json#/$def/contact_types"},
                        { "required": ["phone","email","address"] }
                    ]
                }
            }
        },
        "occupation": {
            "category": {
                "type": "object",
                "properties": {
                    "industry": {
                        "type": "string",
                        "enum": ["Banking", "Medical", "Construction", "IT"]
                    },
                    "title": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "$ref": "#/$def/person"
}
