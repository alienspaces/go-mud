apiVersion: apps/v1
kind: Deployment
metadata:
  name: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-template
spec:
  selector:
    matchLabels:
      app: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-template
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-template
        app: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-template
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-template
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-database
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-template-container
          image: {APP_IMAGE}
          imagePullPolicy: IfNotPresent
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            failureThreshold: 6
          resources:
            requests:
              memory: "50Mi"
              cpu: "0.05"
            limits:
              memory: "250Mi"
              cpu: "0.25"
          envFrom:
            - configMapRef:
                name: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-configmap
          env:
            - name: APP_SERVER_DB_HOST
              value: {APP_PROJECT_NAMESPACE}-{APP_ENV_NAME}-database-service
          ports:
            - containerPort: 8080
